// Mocks generated by Mockito 5.4.2 from annotations
// in todo_sprint/test/features/todo/presentation/bloc/todo_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_sprint/core/error/failures.dart' as _i6;
import 'package:todo_sprint/core/usecases/usecase.dart' as _i9;
import 'package:todo_sprint/features/todo/domain/entities/todo.dart' as _i7;
import 'package:todo_sprint/features/todo/domain/repositories/todo_repository.dart'
    as _i2;
import 'package:todo_sprint/features/todo/domain/usecases/create_todo.dart'
    as _i4;
import 'package:todo_sprint/features/todo/domain/usecases/delete_todo.dart'
    as _i12;
import 'package:todo_sprint/features/todo/domain/usecases/get_all_todo.dart'
    as _i8;
import 'package:todo_sprint/features/todo/domain/usecases/get_todo.dart'
    as _i10;
import 'package:todo_sprint/features/todo/domain/usecases/update_todo.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodoRepository_0 extends _i1.SmartFake
    implements _i2.TodoRepository {
  _FakeTodoRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CreateTodo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateTodo extends _i1.Mock implements _i4.CreateTodo {
  MockCreateTodo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTodoRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TodoRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>> call(_i4.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>.value(
            _FakeEither_1<_i6.Failure, _i7.Todo>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>);
}

/// A class which mocks [GetAllTodos].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllTodos extends _i1.Mock implements _i8.GetAllTodos {
  MockGetAllTodos() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTodoRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TodoRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Todo>>> call(
          _i9.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i7.Todo>>>.value(
            _FakeEither_1<_i6.Failure, List<_i7.Todo>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.Todo>>>);
}

/// A class which mocks [GetTodo].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTodo extends _i1.Mock implements _i10.GetTodo {
  MockGetTodo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTodoRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TodoRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>> call(_i10.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>.value(
            _FakeEither_1<_i6.Failure, _i7.Todo>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>);
}

/// A class which mocks [UpdateTodo].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateTodo extends _i1.Mock implements _i11.UpdateTodo {
  MockUpdateTodo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTodoRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TodoRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>> call(_i11.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>.value(
            _FakeEither_1<_i6.Failure, _i7.Todo>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.Todo>>);
}

/// A class which mocks [DeleteTodo].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteTodo extends _i1.Mock implements _i12.DeleteTodo {
  MockDeleteTodo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTodoRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TodoRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> call(_i12.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
